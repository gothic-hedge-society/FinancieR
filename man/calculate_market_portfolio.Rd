% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_market_portfolio.R
\name{calculate_market_portfolio}
\alias{calculate_market_portfolio}
\title{Calculate Market Portfolio}
\usage{
calculate_market_portfolio(
  exp_rtn,
  exp_vol,
  exp_cor,
  rf = 8.22e-05,
  allow_shorts = FALSE
)
}
\arguments{
\item{exp_rtn}{Named numeric vector for which each element is the return
expected for the asset specified by the element's name.}

\item{exp_vol}{Named numeric vector for which each element is the volatility
expected for the asset specified by the element's name.}

\item{exp_cor}{Named numeric matrix specifying the expected covariance of
returns for each asset pair.}

\item{rf}{The risk-free rate to use in calculation of
\href{https://www.investopedia.com/articles/07/sharpe_ratio.asp}{Sharpe Ratio},
in decimal form. Defaults to \strong{0.00822}\% daily return (about 3\%
annually). If you specify a different value for \emph{rf}, \strong{make
sure its time basis matches the one used for you other inputs}, (i.e., if
\emph{exp_rtn} contains monthly returns, use monthly risk-free rate)!}

\item{allow_shorts}{Defaults to FALSE; set to TRUE to allow shorting of all
the assets. There are MANY ways to do this, but by default
\emph{calculate_market_portfolio}() simply treats shorts as another asset
whose expected return equals negative the expected return of going long.}
}
\value{
A list describing the market portfolio (MP). Has four elements:
\describe{
\item{\code{sharpe}, numeric:}{Sharpe Ratio of MP}
\item{\code{weights}, named numeric vector:}{The values of
\code{weights} range from 0 to 1 and denote the fraction of the total
MP value allocated to the asset whose identifier is that value's name.}
\item{\code{ex_return}, numeric:}{The return that is expected (i.e.,
predicted/forecast) for the MP over the next time interval.}
\item{\code{ex_volatility}:}{The volatility that is expected (i.e.,
predicted/forecast) for the MP over the next time interval.}
}
If \emph{total_capital} and \emph{prices} are specified, then two more
elements are included in the list output:
\describe{
\item{\code{shares}, named numeric:}{
Integer number of shares to be bought
}
\item{\code{cash_balance}, named numeric vector:}{The values of
\code{weights} range from 0 to 1 and denote the fraction of the total
MP value allocated to the asset whose identifier is that value's name.}
\item{\code{ex_return}, numeric:}{The return that is expected (i.e.,
predicted/forecast) for the MP over the next time interval.}
\item{\code{ex_volatility}:}{The volatility that is expected (i.e.,
predicted/forecast) for the MP over the next time interval.}
}
}
\description{
Calculate the Sharpe-optimal market portfolio available for a set of assets
given the expected returns, volatilities, and correlations of returns for
each asset.
}
\details{
All arguments which are percentages (\emph{exp_rtn}, \emph{exp_vol}, and
\emph{rf}) must be supplied in decimal form; i.e., to specify "12\%", use
0.12, not 12.

It should go without saying, but make sure that every asset is represented
in the three inputs: names of \emph{exp_rtn}, \emph{exp_vol}, and the row &
colnames of \emph{exp_cor}.

This function works by finding the Sharpe-optimum equal-weighted portfolio
that can be created using the assets passed in. Using that portfolio as a
starting point, the function finds the assets A and B such that
reallocating ("selling") a small amount (\emph{step}) of A into asset B
("buying") results in a portfolio whose Sharpe is greater than all other
possible assets A and B. The portfolio variable is updated.

This process is repeated with smaller and smaller \emph{step} sizes. When
it is not possible to reallocate \emph{step} amount of any asset A into any
other asset B so as to create a portfolio having a better Sharpe, the
Market Portfolio has been reached and the function returns the value.
}
\examples{

# Use the sample dataset "yahoo_adj_prices", provided with the package, for 
# this example. Start with the assumption that the returns that we expect for 
# the next period (day) are the means of the historical log returns observed 
# for a given date window specified by "start_dt" and "end_dt"
end_dt   <- as.Date(zoo::index(xts::last(yahoo_adj_prices))) # latest date
start_dt <- end_dt - 365*3                                   # 3-yr window
end_dt
start_dt

# From adjusted prices, get the observed daily historical log return
historical_rtn <- yahoo_adj_prices[paste0(start_dt - 1, "/", end_dt)] \%>\% {
  log(.[-1,] / lag(., k =  1, na.pad = FALSE)[-nrow(.),])
}

# Assume that the returns we expect for the next period (day) are the
# averages of the returns observed during the date window:
exp_rtn <- colMeans(historical_rtn)

# Assume that the volatilities we expect for the next period (day) are the
# standard deviations of the returns observed during the date window:
exp_vol <- dplyr::summarize(
  tibble::as_tibble(historical_rtn),
  dplyr::across(dplyr::everything(), sd, na.rm = TRUE)
) \%>\%
  purrr::as_vector()

# Assume that the correlations of returns of each asset pair that we expect
# for the next perid (day) are the observed historical correlations:
exp_cor <- stats::cor(historical_rtn, use = "pairwise.complete.obs")

# Calculate the market portfolio:
calculate_market_portfolio(exp_rtn, exp_vol, exp_cor)

### Calculate the market portfolio allowing both long & short positions:
calculate_market_portfolio(exp_rtn, exp_vol, exp_cor, allow_shorts = TRUE)

}
